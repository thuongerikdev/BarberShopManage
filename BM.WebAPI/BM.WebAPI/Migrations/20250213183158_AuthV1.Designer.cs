// <auto-generated />
using System;
using BM.Auth.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BM.WebAPI.Migrations
{
    [DbContext(typeof(AuthDbContext))]
    [Migration("20250213183158_AuthV1")]
    partial class AuthV1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BM.Auth.Domain.AuthEmp", b =>
                {
                    b.Property<int>("empID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("empID"));

                    b.Property<int>("empCode")
                        .HasColumnType("int");

                    b.Property<int>("positionID")
                        .HasColumnType("int");

                    b.Property<double>("salary")
                        .HasColumnType("float");

                    b.Property<int>("specialtyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("startDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("empID");

                    b.HasIndex("positionID");

                    b.HasIndex("specialtyID");

                    b.HasIndex("userID")
                        .IsUnique();

                    b.ToTable("AuthEmp", "auth");
                });

            modelBuilder.Entity("BM.Auth.Domain.AuthPosition", b =>
                {
                    b.Property<int>("positionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("positionID"));

                    b.Property<double>("DefaultSalary")
                        .HasColumnType("float");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("note")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("positionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("positionID");

                    b.ToTable("AuthPosition", "auth");
                });

            modelBuilder.Entity("BM.Auth.Domain.AuthSpecialty", b =>
                {
                    b.Property<int>("specialtyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("specialtyID"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("note")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("percent")
                        .HasColumnType("int");

                    b.Property<string>("specialtyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("specialtyID");

                    b.ToTable("AuthSpecialty", "auth");
                });

            modelBuilder.Entity("BM.Auth.Domain.AuthUser", b =>
                {
                    b.Property<int>("userID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userID"));

                    b.Property<string>("avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("dateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("userID");

                    b.ToTable("AuthUser", "auth");
                });

            modelBuilder.Entity("BM.Auth.Domain.AuthEmp", b =>
                {
                    b.HasOne("BM.Auth.Domain.AuthPosition", "AuthPosition")
                        .WithMany("AuthEmps")
                        .HasForeignKey("positionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BM.Auth.Domain.AuthSpecialty", "AuthSpecialty")
                        .WithMany("AuthEmps")
                        .HasForeignKey("specialtyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BM.Auth.Domain.AuthUser", "AuthUser")
                        .WithOne("AuthEmp")
                        .HasForeignKey("BM.Auth.Domain.AuthEmp", "userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuthPosition");

                    b.Navigation("AuthSpecialty");

                    b.Navigation("AuthUser");
                });

            modelBuilder.Entity("BM.Auth.Domain.AuthPosition", b =>
                {
                    b.Navigation("AuthEmps");
                });

            modelBuilder.Entity("BM.Auth.Domain.AuthSpecialty", b =>
                {
                    b.Navigation("AuthEmps");
                });

            modelBuilder.Entity("BM.Auth.Domain.AuthUser", b =>
                {
                    b.Navigation("AuthEmp")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
